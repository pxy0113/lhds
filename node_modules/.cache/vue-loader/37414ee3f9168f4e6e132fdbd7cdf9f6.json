{"remainingRequest":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\pxy\\Downloads\\test\\lhds\\src\\components\\common\\Datepick.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\src\\components\\common\\Datepick.vue","mtime":1574651315622},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572955172692},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1572955235189},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":1572955171173},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572955172692},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\vue-loader\\lib\\index.js","mtime":1572955240129}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getMonthDay,\n  dateTimePicker,\n  transPickerValue\n} from '@/plugins/newDate.js'\nimport upSvg from '@/img/up.svg'\nimport BScroll from 'better-scroll'\nimport { scrollMixins } from '@/mixins/scroll.js'\nimport {\n\tmapActions\n} from 'vuex';\nexport default {\n\tmixins:[scrollMixins],\n\tdata() {\n\t\treturn {\n\t\t\tdateStr:'',\n\t\t\t\n\t\t\tfirstTime:'2019-01-11',\n\t\t\t\n\t\t\ttext:['年','月','日'],\n\t\t\t\n\t\t\tdateTime:[0,0,0],\n\t\t\t\n\t\t\twheels: [],\n\t\t\t\n\t\t\tdisplay:false,\n\n\t\t\tpickerData: [],\n\n\n\t\t}\n\t},\n\t\n\tcomputed:{\n\t  dateTimeArray(){\n\t    return dateTimePicker().dateTimeArray;\n\t  }\n\t},\n\t\n\tmounted() {\n\t\tthis.init();\n\t},\n\t\n\tprops:{\n\t\tvalue:{\n\t\t\ttype:String,\n\t\t\tdefault:''\n\t\t},\n\t\tshowIcon:{\n\t\t\ttype:Boolean,\n\t\t\tdefault:false\n\t\t}\n\t},\n\t\n\twatch:{\n\t\tvalue:{\n\t\t\thandler(nV,oV){\n\t\t\t\tthis.firstTime = nV; \n\t\t\t\tthis.init();\n\t\t\t},\n\t\t\timmediate: true\n\t\t},\n\t\tdisplay(nV){\n\t\t\t!nV&&this.scrollToOrigin();\n\t\t}\n\t},\n\t\n\tmethods: {\n\t\tinit(){//初始化\n\t\t\tthis.dateTime = transPickerValue(this.firstTime);\n\t\t\t\n\t\t\tthis.pickerData  = this.dateTimeArray;\n\t\t\t\n\t\t\tlet brr = [];\n\t\t\t\n\t\t\tthis.dateTime.forEach((item,i) =>{\n\t\t\t\tbrr.push(this.pickerData[i][this.dateTime[i]]);\n\t\t\t});\n\n\t\t\tthis.dateStr = `${brr[0]}-${brr[1]}-${brr[2]}`;\n\t\t},\n\n\t\tcancelSelect(){//取消选择\n\t\t\tthis.display = false;\n\t\t},\n\t\t\n\t\tscrollToOrigin(){//滚动位置回到原点\n\t\t\tthis.beforeClose();\n\t\t\t\n\t\t\tthis.dateTime.forEach((item,i) =>{\n\t\t\t\tthis.wheels[i].wheelTo(item);\n\t\t\t});\n\t\t},\n\n\t\tselectOk(){//确定选择\n\t\t\tlet arr = [];\n\t\t\t\n\t\t\tthis.wheels.forEach((wheel, i) => {\n\t\t\t  arr.push(wheel.getSelectedIndex());//bs自带的方法 获取元素下标\n\t\t\t});\n\n\t\t\tthis.dateTime = arr;\n\t\t\t\n\t\t\tlet brr = [];\n\t\t\t\n\t\t\tarr.forEach((item,i) =>{\n\t\t\t\tbrr.push(this.pickerData[i][arr[i]]);\n\t\t\t});\n\t\t\t\n\t\t\tlet str = `${brr[0]}-${brr[1]}-${brr[2]}`;\n\t\t\t\n\t\t\tthis.dateStr = str;\n\t\t\t\n\t\t\tthis.$emit('changeTime',str);\n\n\t\t\tthis.display = false;\n\t\t},\n\n\t\tshow(){ //显示选择器\n\n\t\t\tthis.display = true;\n\t\t\t\n\t\t\tthis.$nextTick(() => {\n\t\t\t  const wheelWrapper = this.$refs.wheelWrapper\n\t\t\t  this.pickerData.forEach((item, index) => {\n\t\t\t\tthis.createWheel(wheelWrapper, index).enable()\n\t\t\t  });\n\t\t\t});\n\t\t\t\n\t\t\tthis.afterOpen();\n\t\t},\n\t\t\n\t\t_getCurrentValue () {\n\t\t  const value = []\n\t\t  this.wheels.forEach((wheel, i) => {\n\t\t    const j = wheel.getSelectedIndex();//bs自带的方法 获取元素下标\n\t\t    value.push({\n\t\t      index: j,\n\t\t      value: this.pickerData[i][j]\n\t\t    })\n\t\t  });\n\t\t  return value\n\t\t},\n\t\t\n\t\tcreateWheel (wheelWrapper, i) { //创建bs的wheel配置\n\t\t  if (!this.wheels[i]) {\n\t\t    const wheel = this.wheels[i] = new BScroll(wheelWrapper.children[i], {\n\t\t      wheel: {\n\t\t        selectedIndex: this.dateTime[i],\n\t\t        rotate: 25\n\t\t      },\n\t\t      swipeTime: 1500\n\t\t    })\n\t\t    wheel.on('scrollEnd', () => {\n\t\t      const newIndex = this._getCurrentValue()[i].index;\n\t\t\t  const newValue = this._getCurrentValue()[i].value;\n\t\t    });\n\n\t\t\t\n\t\t  } else {\n\t\t    this.wheels[i].refresh()\n\t\t  }\n\t\t  \n\t\t  return this.wheels[i]\n\t\t},\n\t}\n}\n",null]}