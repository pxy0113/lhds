{"remainingRequest":"F:\\work\\lhds\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\work\\lhds\\src\\components\\core\\Drawer.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\work\\lhds\\src\\components\\core\\Drawer.vue","mtime":1573184076041},{"path":"F:\\work\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// Utilities\nimport {\n  mapMutations,\n  mapState\n} from 'vuex'\n\nimport img from '@/img/logo.png'\nimport indexBg from '@/img/index.svg'\nimport personBg from '@/img/person.svg'\nimport detailBg from '@/img/detail.svg'\nimport orderBg from '@/img/order.svg'\nimport ruleBg from '@/img/rule.svg'\nimport createBg from '@/img/create.svg'\nexport default {\n  data: () => ({\n    logo: img,\n    barImg:img,\n\ticonArr:[indexBg,personBg,detailBg,orderBg,ruleBg,createBg],\n    links: [\n      {\n        to: '/dashboard',\n        icon: 0,\n        text: '首页'\n      },\n      {\n        to: '/user',\n        icon: 1,\n        text: '个人中心'\n      },\n      {\n        to: '/table-list',\n        icon: 2,\n        text: '详细数据'\n      },\n      {\n        to: '/order-list',\n        icon: 3,\n        text: '下单数据'\n      },\n      {\n        to: '/rule',\n        icon: 4,\n        text: '规则策略'\n      },\n\t  {\n\t\tto: '/dem',\n\t\ticon: 5,\n\t\ttext:'托管数据'\n\t  }\n    ],\n    responsive: false\n  }),\n  computed: {\n    ...mapState('app', ['image', 'color']),\n    inputValue: {\n      get () {\n        return this.$store.state.showBar\n      },\n      set (val) {\n        this.$store.state.showBar = val;\n      }\n    },\n    items () {\n      return this.$t('Layout.View.items')\n    }\n  },\n\n  methods: {\n    ...mapMutations('app', ['setDrawer', 'toggleDrawer']),\n    // onResponsiveInverted () {\n    //   if (window.innerWidth < 991) {\n    //     this.responsive = true\n    //   } else {\n    //     this.responsive = false\n    //   }\n    // }\n  }\n}\n",null]}