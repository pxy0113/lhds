{"remainingRequest":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\pxy\\Downloads\\test\\lhds\\src\\components\\core\\Drawer.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\src\\components\\core\\Drawer.vue","mtime":1574651315630},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":1572955171173},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572955172692},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\vue-loader\\lib\\index.js","mtime":1572955240129}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// Utilities\r\nimport {\r\n  mapMutations,\r\n  mapState\r\n} from 'vuex'\r\n\r\nimport img from '@/img/logo.png'\r\nimport indexBg from '@/img/index.svg'\r\nimport personBg from '@/img/person.svg'\r\nimport detailBg from '@/img/detail.svg'\r\nimport orderBg from '@/img/order.svg'\r\nimport ruleBg from '@/img/rule.svg'\r\nimport createBg from '@/img/create.svg'\r\nexport default {\r\n  data: () => ({\r\n    logo: img,\r\n    barImg:img,\r\n\ticonArr:[indexBg,personBg,detailBg,orderBg,ruleBg,createBg],\r\n    links: [\r\n      {\r\n        to: '/dashboard',\r\n        icon: 0,\r\n        text: '首页'\r\n      },\r\n      {\r\n        to: '/user',\r\n        icon: 1,\r\n        text: '个人中心'\r\n      },\r\n      {\r\n        to: '/table-list',\r\n        icon: 2,\r\n        text: '详细数据'\r\n      },\r\n      {\r\n        to: '/order-list',\r\n        icon: 3,\r\n        text: '下单数据'\r\n      },\r\n      {\r\n        to: '/rule',\r\n        icon: 4,\r\n        text: '规则策略'\r\n      },\r\n\t  {\r\n\t\tto: '/dem',\r\n\t\ticon: 5,\r\n\t\ttext:'托管数据'\r\n\t  }\r\n    ],\r\n    responsive: false\r\n  }),\r\n  computed: {\r\n    ...mapState('app', ['image', 'color']),\r\n    inputValue: {\r\n      get () {\r\n        return this.$store.state.showBar\r\n      },\r\n      set (val) {\r\n        this.$store.state.showBar = val;\r\n      }\r\n    },\r\n    items () {\r\n      return this.$t('Layout.View.items')\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    ...mapMutations('app', ['setDrawer', 'toggleDrawer']),\r\n    // onResponsiveInverted () {\r\n    //   if (window.innerWidth < 991) {\r\n    //     this.responsive = true\r\n    //   } else {\r\n    //     this.responsive = false\r\n    //   }\r\n    // }\r\n  }\r\n}\r\n",null]}