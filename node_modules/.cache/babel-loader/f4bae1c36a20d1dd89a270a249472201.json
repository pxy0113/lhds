{"remainingRequest":"F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js!F:\\work\\lhds\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\work\\lhds\\src\\router\\index.js","dependencies":[{"path":"F:\\work\\lhds\\src\\router\\index.js","mtime":1571987527299},{"path":"F:\\work\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n\n/**\n * Vue Router\n *\n * @library\n *\n * https://router.vuejs.org/en/\n */\n// Lib imports\nimport Vue from 'vue';\nimport VueAnalytics from 'vue-analytics';\nimport Router from 'vue-router'; // import Meta from 'vue-meta'\n\nimport vuex from \"../store/index\"; // Routes\n\nimport paths from \"./paths\";\nimport mPaths from \"./mPaths\";\n\nvar detectDeviceType = function detectDeviceType() {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ? 'Mobile' : 'Desktop';\n};\n\nvar type = detectDeviceType();\nvar testPaths = type == 'Mobile' ? mPaths : paths;\n\nfunction route(path, view, name) {\n  return {\n    name: name,\n    path: path,\n    component: function component(resolve) {\n      return import(\"@/views/\".concat(view, \".vue\")).then(resolve);\n    } // \treturn {\n    // \t\tname: name || view,\n    // \t\tpath,\n    // \t\tcomponent: (resovle) => import(\n    // \t\t\t`@/views/${view}.vue`\n    // \t\t).then(resovle)\n    // \t}\n    // \n\n  };\n}\n\nVue.use(Router); // Create a new router\n\nvar router = new Router({\n  // mode: 'history',\n  // base:'/dist/',\n  routes: testPaths.map(function (path) {\n    return route(path.path, path.view, path.name);\n  }).concat([{\n    path: '*',\n    redirect: '/dashboard'\n  }]),\n  scrollBehavior: function scrollBehavior(to, from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition;\n    }\n\n    if (to.hash) {\n      return {\n        selector: to.hash\n      };\n    }\n\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n}); // Vue.use(Meta)\n\nrouter.beforeEach(function (to, from, next) {\n  //会在任意路由跳转前执行，next一定要记着执行，不然路由不能跳转了\n  if (to.path == '/login') {\n    console.log('我就是要去登陆啊');\n    next();\n  } else {\n    //去的不是登陆页\n    if (!sessionStorage.token) {\n      //未登录\n      if (from.path == '/login') {\n        next();\n      } else {\n        vuex.state.showBar = false;\n        next('/login');\n      }\n    } else {\n      next();\n    }\n  }\n}); // Bootstrap Analytics\n// Set in .env\n// https://github.com/MatteoGabriele/vue-analytics\n\nif (process.env.GOOGLE_ANALYTICS) {\n  Vue.use(VueAnalytics, {\n    id: process.env.GOOGLE_ANALYTICS,\n    router: router,\n    autoTracking: {\n      page: process.env.NODE_ENV !== 'development'\n    }\n  });\n}\n\nexport default router;",{"version":3,"sources":["F:\\work\\lhds\\src\\router\\index.js"],"names":["Vue","VueAnalytics","Router","vuex","paths","mPaths","detectDeviceType","test","navigator","userAgent","type","testPaths","route","path","view","name","component","resolve","then","use","router","routes","map","concat","redirect","scrollBehavior","to","from","savedPosition","hash","selector","x","y","beforeEach","next","console","log","sessionStorage","token","state","showBar","process","env","GOOGLE_ANALYTICS","id","autoTracking","page","NODE_ENV"],"mappings":"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","sourcesContent":["/**\n * Vue Router\n *\n * @library\n *\n * https://router.vuejs.org/en/\n */\n\n// Lib imports\nimport Vue from 'vue'\nimport VueAnalytics from 'vue-analytics'\nimport Router from 'vue-router'\n// import Meta from 'vue-meta'\nimport vuex from '../store/index'\n// Routes\nimport paths from './paths'\r\nimport mPaths from './mPaths'\r\n\r\nconst detectDeviceType = () =>\r\n/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)\r\n? 'Mobile'\r\n: 'Desktop';\r\nlet type = detectDeviceType();\r\n\nlet testPaths = type=='Mobile'?mPaths:paths;\r\n\nfunction route(path, view, name) {\r\n\treturn {\r\n\t\tname:name,\r\n\t\tpath,\r\n\t\tcomponent: (resolve) => import (\r\n\t\t\t`@/views/${view}.vue`\r\n\t\t).then(resolve)\r\n\t}\r\n\r\n// \treturn {\r\n// \t\tname: name || view,\r\n// \t\tpath,\r\n// \t\tcomponent: (resovle) => import(\r\n// \t\t\t`@/views/${view}.vue`\r\n// \t\t).then(resovle)\r\n// \t}\n// \n}\n\nVue.use(Router)\n\n// Create a new router\nconst router = new Router({\n    // mode: 'history',\n    // base:'/dist/',\n    routes: testPaths.map(path => route(path.path, path.view, path.name)).concat([{\n        path: '*',\n        redirect: '/dashboard'\n    }]),\n    scrollBehavior(to, from, savedPosition) {\n        if (savedPosition) {\n            return savedPosition\n        }\n        if (to.hash) {\n            return {\n                selector: to.hash\n            }\n        }\n        return {\n            x: 0,\n            y: 0\n        }\n    }\n})\n\n// Vue.use(Meta)\nrouter.beforeEach((to, from, next) => { //会在任意路由跳转前执行，next一定要记着执行，不然路由不能跳转了\n\n\n    if(to.path == '/login'){\n        console.log('我就是要去登陆啊')\n        next();\n    }else{ //去的不是登陆页\n        if(!sessionStorage.token){ //未登录\n            if(from.path=='/login'){\n                next();\n            }else{\n                vuex.state.showBar = false;\n                next('/login');           \n            }\n\n        }else{\n            next();\n        }  \n    }\n    \n\n\n});\n\n\n// Bootstrap Analytics\n// Set in .env\n// https://github.com/MatteoGabriele/vue-analytics\nif (process.env.GOOGLE_ANALYTICS) {\n    Vue.use(VueAnalytics, {\n        id: process.env.GOOGLE_ANALYTICS,\n        router,\n        autoTracking: {\n            page: process.env.NODE_ENV !== 'development'\n        }\n    })\n}\n\nexport default router\n"]}]}