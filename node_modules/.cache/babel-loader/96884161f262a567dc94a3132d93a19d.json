{"remainingRequest":"F:\\work\\lhds\\node_modules\\thread-loader\\dist\\cjs.js!F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js!F:\\work\\lhds\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\work\\lhds\\src\\mixins\\mobileRule.js","dependencies":[{"path":"F:\\work\\lhds\\src\\mixins\\mobileRule.js","mtime":1574407086143},{"path":"F:\\work\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _slicedToArray from \"F:\\\\work\\\\lhds\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"F:\\\\work\\\\lhds\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { mapActions } from 'vuex';\nimport Utils from '@/plugins/cryAes.js';\nexport var addRuleData = {\n  props: {\n    ruleObj: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    edit: {\n      type: Boolean,\n      default: false\n    },\n    parentName: {\n      //父组件的名字\n      type: String,\n      default: 'Rule'\n    }\n  },\n  watch: {\n    edit: {\n      handler: 'transRuleData',\n      immediate: true\n    }\n  },\n  data: function data() {\n    return {\n      other: [{\n        id: 1,\n        text: '补仓',\n        show: true\n      }, {\n        id: 2,\n        text: '止损',\n        show: true\n      }, {\n        id: 3,\n        text: '建仓',\n        show: true\n      }],\n      otherList: {\n        \"1\": {},\n        \"2\": {},\n        \"3\": {}\n      },\n      newOtherObj: {},\n      dialog: false,\n      rules: {\n        required: function required(v) {\n          return !!v || '必填';\n        },\n        length: function length(v) {\n          return v && v.length <= 68 || '超出长度';\n        },\n        isEmpty: function isEmpty(v) {\n          return /\\S/.test(v) || '不可为空';\n        },\n        size: function size(v) {\n          return v > 0 || '必须大于0';\n        },\n        percent: function percent(v) {\n          return v <= 100 || '不可超出100';\n        },\n        not: function not(v) {\n          return !/[\\u4E00-\\u9FA5]/g.test(v) || '不能是中文';\n        }\n      },\n      valid: true,\n      valid2: true,\n      valid3: true,\n      ruleName: '',\n      //规则名称\n      jData: {\n        //建仓\n        R1: 0,\n        //买入跌幅\n        R3: 1,\n        //单次买入金额\n        R2: 0,\n        //跌幅回调\n        R54: null,\n        //计价货币\n        R11: false,\n        //允许强制建仓\n        R12: 0,\n        //强制建仓\n        R13: false,\n        //允许\n        R14: 1,\n        //分钟内上涨\n        R15: 0,\n        //追涨建仓\n        R36: 1,\n        //防插针\n        R7: 0,\n        //单次补仓跌幅\n        R10: 0,\n        //补仓回调\n        R9: 0,\n        //单次补仓金额\n        R8: 0,\n        //补仓\n        R19: false,\n        //补仓单独卖出\n        R20: false,\n        //补单可进行补仓\n        R4: 0,\n        //卖出涨幅\n        R5: 0,\n        //涨幅回调\n        R6: 0,\n        //止损跌幅\n        R16: false,\n        //允许分钟内下跌\n        R17: 0,\n        //分钟内下跌\n        R18: 0,\n        //杀跌平仓\n        R26: false,\n        //允许补仓\n        R27: 0,\n        //分钟内下跌\n        R28: 0,\n        //时\n        R29: 0,\n        //补仓比例更改为\n        R30: 0,\n        //分钟后回复数值\n        R21: false,\n        //允许止损\n        R22: 0,\n        R23: 0,\n        R24: 0,\n        R25: 0,\n        R31: false,\n        //允许建仓\n        R32: 0,\n        R33: 0,\n        R34: 0,\n        R35: 0\n      },\n      curcy: 1,\n      //当前的R54(货币)\n      currency: [{\n        id: 1,\n        value: 'USDT'\n      }, {\n        id: 2,\n        value: 'ETH'\n      }, {\n        id: 3,\n        value: 'BTC'\n      }]\n    };\n  },\n  methods: _objectSpread({\n    cancelOther: function cancelOther() {\n      //取消添加单一其他规则\n      this.newOtherObj = {};\n      this.dialog = false;\n    },\n    closeOtherItem: function closeOtherItem(obj) {\n      var _this = this;\n\n      //删掉其他规则\n      this.otherList[obj] = {};\n      this.other.forEach(function (item) {\n        if (item.id == obj) {\n          _this.checkName(item.id, false);\n\n          item.show = true;\n        }\n      });\n    },\n    editOtherItem: function editOtherItem(idx) {\n      //编辑已经存在的其他规则\n      this.newOtherObj = this.otherList[idx];\n      this.dialog = true;\n    },\n    checkName: function checkName(name, state) {\n      //查找id得到不同的其他规则\n      name == 1 && (this.jData.R26 = state);\n      name == 2 && (this.jData.R21 = state);\n      name == 3 && (this.jData.R31 = state);\n    },\n    createOneOther: function createOneOther(obj) {\n      var _this2 = this;\n\n      //编辑其他规则提交后\n      this.dialog = false; // let {name,...params} = obj;可以得到去除了name属性的obj\n\n      this.other.forEach(function (item) {\n        if (item.text == obj.name) {\n          item.show = false;\n          _this2.otherList[item.id] = obj;\n\n          _this2.checkName(item.id, true);\n        }\n      });\n    },\n    addOther: function addOther(id, index) {\n      //我想添加一条其他规则\n      var arr = Object.values(this.otherList[id]);\n\n      var _arr = _slicedToArray(arr, 4),\n          a = _arr[0],\n          b = _arr[1],\n          c = _arr[2],\n          d = _arr[3];\n\n      this.newOtherObj = {\n        name: this.other[index].text,\n        a: a,\n        b: b,\n        c: c,\n        d: d\n      };\n      this.dialog = true;\n    }\n  }, mapActions(['changeLay', 'changeSnack']), {\n    mainValid: function mainValid() {\n      //表单验证\n      var options = {\n        duration: 1000,\n        offset: 0,\n        easing: 'easeInOutCubic'\n      };\n\n      if (this.$refs.valid.validate()) {\n        if (this.$refs.valid2.validate()) {\n          if (this.$refs.valid3.validate()) {\n            this.postRule();\n          } else {\n            this.$vuetify.goTo(this.$refs.valid3, options);\n          }\n        } else {\n          this.$vuetify.goTo(this.$refs.valid2, options);\n        }\n      } else {\n        this.$vuetify.goTo(this.$refs.valid, options);\n      }\n    },\n    transRuleData: function transRuleData() {\n      //要编辑的数据进行转化\n      if (this.edit) {\n        var item = _objectSpread({}, this.ruleObj);\n\n        this.curcy = Number(item.R54);\n        this.ruleName = item.R0 ? this.unescapeF(item.R0) : '';\n        var _ref = [item.R11 == 1 ? true : false, item.R13 == 1 ? true : false, item.R19 == 1 ? true : false, item.R16 == 1 ? true : false, item.R20 == 1 ? true : false, item.R21 == 1 ? true : false, item.R26 == 1 ? true : false, item.R31 == 1 ? true : false],\n            R11 = _ref[0],\n            R13 = _ref[1],\n            R19 = _ref[2],\n            R16 = _ref[3],\n            R20 = _ref[4],\n            R21 = _ref[5],\n            R26 = _ref[6],\n            R31 = _ref[7];\n        this.jData = Object.assign({}, item, {\n          R11: R11,\n          R13: R13,\n          R19: R19,\n          R16: R16,\n          R20: R20,\n          R21: R21,\n          R26: R26,\n          R31: R31\n        });\n\n        if (R21) {\n          this.other[1].show = false;\n          this.otherList[2] = {\n            name: this.other[1].text,\n            a: this.jData.R22,\n            b: this.jData.R23,\n            c: this.jData.R24,\n            d: this.jData.R25\n          };\n        }\n\n        if (R26) {\n          this.other[0].show = false;\n          this.otherList[1] = {\n            name: this.other[0].text,\n            a: this.jData.R27,\n            b: this.jData.R28,\n            c: this.jData.R29,\n            d: this.jData.R30\n          };\n        }\n\n        if (R31) {\n          this.other[2].show = false;\n          this.otherList[3] = {\n            name: this.other[2].text,\n            a: this.jData.R32,\n            b: this.jData.R33,\n            c: this.jData.R34,\n            d: this.jData.R35\n          };\n        }\n      }\n    },\n    beforePostRule: function beforePostRule() {\n      //提交规则前整理数据\n      var title = this.ruleName.replace(/\\s+/g, '');\n      var other1 = this.otherList;\n      var _ref2 = [this.curcy, this.charToUnicode(title), this.jData.R11 ? 1 : 0, this.jData.R13 ? 1 : 0, this.jData.R19 ? 1 : 0, this.jData.R16 ? 1 : 0, this.jData.R20 ? 1 : 0],\n          R54 = _ref2[0],\n          R0 = _ref2[1],\n          R11 = _ref2[2],\n          R13 = _ref2[3],\n          R19 = _ref2[4],\n          R16 = _ref2[5],\n          R20 = _ref2[6];\n      var _ref3 = [this.jData.R21 ? 1 : 0, other1[2].a, other1[2].b, other1[2].c, other1[2].d, this.jData.R26 ? 1 : 0, other1[1].a, other1[1].b, other1[1].c, other1[1].d, this.jData.R31 ? 1 : 0, other1[3].a, other1[3].b, other1[3].c, other1[3].d],\n          R21 = _ref3[0],\n          R22 = _ref3[1],\n          R23 = _ref3[2],\n          R24 = _ref3[3],\n          R25 = _ref3[4],\n          R26 = _ref3[5],\n          R27 = _ref3[6],\n          R28 = _ref3[7],\n          R29 = _ref3[8],\n          R30 = _ref3[9],\n          R31 = _ref3[10],\n          R32 = _ref3[11],\n          R33 = _ref3[12],\n          R34 = _ref3[13],\n          R35 = _ref3[14];\n\n      var list = _objectSpread({}, this.jData, {\n        R54: R54,\n        R0: R0,\n        R11: R11,\n        R13: R13,\n        R19: R19,\n        R16: R16,\n        R20: R20,\n        R21: R21,\n        R22: R22,\n        R23: R23,\n        R24: R24,\n        R25: R25,\n        R26: R26,\n        R27: R27,\n        R28: R28,\n        R29: R29,\n        R30: R30,\n        R31: R31,\n        R32: R32,\n        R33: R33,\n        R34: R34,\n        R35: R35\n      });\n\n      for (var i in list) {\n        //后端要求数字转字符\n        if (typeof list[i] == 'number') {\n          list[i] = list[i].toString();\n        }\n\n        if (typeof list[i] == 'undefined') {\n          //other1里不存在就会undefined 转为0\n          list[i] = '0';\n        }\n      }\n\n      return {\n        list: list,\n        title: title\n      };\n    },\n    wssSave: function wssSave() {\n      var json = JSON.stringify({\n        code: 1006\n      });\n      this.$sock.websocketsend(json);\n    },\n    postRule: function postRule() {\n      //提交规则\n      var before = this.beforePostRule();\n      var obj = {\n        name: before.title,\n        data: Utils.encrypt(JSON.stringify(before.list))\n      };\n      this.edit ? obj.id = before.list.id : '';\n      this.parentName == 'Rule' ? this.ruleAction(obj) : this.demAction(obj);\n    },\n    ruleAction: function ruleAction(obj) {\n      var _this3 = this;\n\n      //父组件是Rule时执行\n      var url = this.edit ? '/EasWebUser/changeRule' : '/EasWebUser/addRule';\n      $ax.getAjaxData(url, obj, function (res) {\n        _this3.changeLay(false);\n\n        if (res.code == 1) {\n          var msg = {\n            state: true,\n            errorText: {\n              type: 'success',\n              text: _this3.edit ? '编辑成功' : '添加成功'\n            }\n          };\n\n          _this3.changeSnack(msg);\n\n          var state = _this3.$sock.lookState();\n\n          state == -1 ? _this3.$sock.initWebSocket() : _this3.wssSave();\n          sessionStorage.removeItem('collocation'); //清空缓存里的rule/api\n\n          Object.assign(_this3.$data, _this3.$options.data());\n\n          _this3.hideRule();\n        }\n      }, {\n        hasToken: true\n      });\n    },\n    demAction: function demAction(obj) {\n      //父组件是Dem时执行\n      var json = JSON.stringify({\n        code: 1008,\n        data: [{\n          id: obj.id,\n          data: obj.data\n        }]\n      });\n      this.$sock.websocketsend(json);\n      Object.assign(this.$data, this.$options.data());\n      this.hideRule();\n    },\n    listenState: function listenState(name) {\n      this.jData.R19 = name;\n      name == true ? '' : this.jData.R20 = false;\n    },\n    selectCurrency: function selectCurrency(e) {\n      //选择计价货币\n      this.jData.R54 = e;\n    },\n    hideRule: function hideRule() {\n      this.$emit('hideRule');\n    },\n    allowJc: function allowJc() {\n      //是否强制建仓\n      this.jData.R11 = !this.jData.R11;\n\n      if (!this.jData.R11) {\n        //没被选中\n        this.jData.R12 = 0;\n      }\n    },\n    allowSup: function allowSup() {\n      this.jData.R13 = !this.jData.R13;\n\n      if (!this.jData.R13) {\n        this.jData.R14 = 0;\n        this.jData.R15 = 0;\n        this.jData.R36 = 0;\n      }\n    },\n    allowPc: function allowPc() {\n      //允许-平仓\n      this.jData.R16 = !this.jData.R16;\n\n      if (!this.jData.R16) {\n        this.jData.R17 = 0;\n        this.jData.R18 = 0;\n      }\n    },\n    unescapeF: function unescapeF(str) {\n      //unicode=>文字\n      return unescape(str.replace(/\\\\/g, \"%\"));\n    },\n    charToUnicode: function charToUnicode(str) {\n      var res = [];\n\n      for (var i = 0; i < str.length; i++) {\n        res[i] = (\"00\" + str.charCodeAt(i).toString(16)).slice(-4);\n      }\n\n      return \"%u\" + res.join(\"%u\");\n    }\n  })\n};",null]}