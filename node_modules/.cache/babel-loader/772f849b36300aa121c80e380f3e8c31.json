{"remainingRequest":"F:\\work\\lhds\\node_modules\\thread-loader\\dist\\cjs.js!F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js!F:\\work\\lhds\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\work\\lhds\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\work\\lhds\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\work\\lhds\\src\\views\\Login.vue","mtime":1573809817115},{"path":"F:\\work\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"F:\\\\work\\\\lhds\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nimport img from '@/img/logo.png';\nimport bgImg from '@/img/body.svg';\nimport showIcon from '@/img/show.svg';\nimport hideIcon from '@/img/hide.svg';\nexport default {\n  data: function data() {\n    //数据\n    return {\n      errorText: {},\n      snackbar: false,\n      code: '',\n      dialog: false,\n      //对话框\n      logo: img,\n      show_icon: showIcon,\n      hide_icon: hideIcon,\n      bg: bgImg,\n      type: 1,\n      //1登陆2忘记3注册\n      registerValid: true,\n      loginValid: true,\n      show1: false,\n      name: '',\n      password: '',\n      email: '',\n      nameRules: [function (v) {\n        return !!v || '必填';\n      }, function (v) {\n        return v && v.length >= 2 || '名称至少两个字';\n      }],\n      rules: {\n        required: function required(value) {\n          return !!value || '必填.';\n        },\n        min: function min(v) {\n          return v.length >= 6 || '最少六个字符';\n        },\n        email: function email(value) {\n          var pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          return pattern.test(value) || '请输入正确的邮箱.';\n        }\n      }\n    };\n  },\n  components: {//模板\n  },\n  methods: _objectSpread({}, mapActions(['changeLay', 'changeSnack']), {\n    login: function login() {\n      var _this = this;\n\n      //登陆\n      if (this.$refs.loginForm.validate()) {\n        this.changeLay(true);\n        var list = {\n          account: this.name,\n          password: this.password\n        };\n        $ax.getAjaxData('/EasWebUser/login', list, function (res) {\n          _this.changeLay(false);\n\n          if (res.code == 1) {\n            sessionStorage.token = res.token;\n\n            if (res.accState == 0) {\n              //已过期\n              _this.dialog = true;\n            } else {\n              //未过期\n              var msg = {\n                state: true,\n                errorText: {\n                  type: 'success',\n                  text: '登陆成功'\n                }\n              };\n\n              _this.changeSnack(msg);\n\n              var userData = {\n                name: _this.name,\n                email: res.email,\n                endTime: res.endTime\n              };\n              sessionStorage.showBar = true;\n              _this.$store.state.showBar = true;\n              sessionStorage.userData = JSON.stringify(userData);\n\n              _this.$router.replace({\n                path: '/dashboard'\n              });\n            }\n          }\n        });\n      }\n    },\n    register: function register() {\n      var _this2 = this;\n\n      //注册\n      if (this.$refs.registForm.validate()) {\n        var list = {\n          account: this.name,\n          password: this.password,\n          email: this.email\n        };\n        this.changeLay(true);\n        $ax.getAjaxData('/EasWebUser/register', list, function (res) {\n          if (res.code == 1) {\n            _this2.changeLay(false);\n\n            var msg = {\n              state: true,\n              errorText: {\n                type: 'success',\n                text: '注册成功'\n              }\n            };\n\n            _this2.changeSnack(msg);\n\n            sessionStorage.userName = _this2.name;\n            _this2.type = 1;\n            _this2.name = '';\n            _this2.password = '';\n          } else {\n            _this2.changeLay(false);\n          }\n        });\n      }\n\n      ;\n    },\n    toJH: function toJH() {\n      var _this3 = this;\n\n      //激活\n      var list = {\n        // account:sessionStorage.userName,\n        code: this.code\n      };\n      this.changeLay(true);\n      $ax.getAjaxData('/EasWebUser/recharge', list, function (res) {\n        _this3.changeLay(false);\n\n        if (res.code == 1) {\n          _this3.dialog = false;\n\n          _this3.login();\n        }\n      }, {\n        hasToken: true\n      });\n    }\n  }),\n  //-----------生命周期--------------------------------------\n  created: function created() {//应用程序加载前触发。多个页面会调用多次\n  },\n  mounted: function mounted() {//页面渲染完成后触发\n  }\n};",null]}