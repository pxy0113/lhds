{"remainingRequest":"F:\\work\\lhds\\node_modules\\thread-loader\\dist\\cjs.js!F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js!F:\\work\\lhds\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\work\\lhds\\src\\mixins\\listData.js","dependencies":[{"path":"F:\\work\\lhds\\src\\mixins\\listData.js","mtime":1573806656741},{"path":"F:\\work\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"F:\\\\work\\\\lhds\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//详细数据页面的mixins数据\nimport { mapActions } from 'vuex';\nimport upSvg from '@/img/up.svg';\nexport var listData = {\n  data: function data() {\n    return {\n      shortStart: '',\n      //pc段端于传递给选择器的字段\n      shortEnd: '',\n      //new\n      typeArr: [{\n        id: 0,\n        value: '收益数据'\n      }, {\n        id: 1,\n        value: '下单数据'\n      }],\n      loading: true,\n      //控制骨架屏 true表示显示\n      transition: 'fade-transition',\n      upIcon: upSvg,\n      urls: ['/EasWebUser/getClose', '/EasWebUser/getPlace'],\n      target: '#vRow',\n      options: {\n        duration: 1000,\n        offset: 0,\n        easing: 'easeInOutCubic'\n      },\n      startTime: '',\n      endTime: '',\n      items: [],\n      //下单记录列表\n      tabIndex: 0,\n      //当前下标\n      size: 50,\n      componentArr: ['tableList', 'orderList'] //组件数组\n\n    };\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: _objectSpread({\n    init: function init() {\n      //初始化\n      this.startTime = this.$moment().startOf('day').format('YYYY-MM-DD HH:mm:ss');\n      this.endTime = this.$moment().endOf('day').format('YYYY-MM-DD HH:mm:ss');\n      this.shortStart = this.$moment().format('YYYY-MM-DD');\n      this.shortEnd = this.$moment().format('YYYY-MM-DD');\n      var list = {\n        \"beginTime\": this.$moment(this.startTime).format('x'),\n        \"endTime\": this.$moment(this.endTime).format('x'),\n        \"pageSize\": 10,\n        \"pageIndex\": 1\n      };\n      this.getListData(list);\n    },\n    getListData: function getListData(list) {\n      var _this = this;\n\n      //获取下单数据\n      this.loading = true;\n      $ax.getAjaxData(this.urls[this.tabIndex], list, function (res) {\n        if (res.code == 1) {\n          var data = res.data;\n          _this.curPage = {\n            page: res.pageIndex,\n            size: res.pageMaxPage\n          };\n          data.forEach(function (item) {\n            if (item.placeTime) {\n              item.placeTime = _this.$utils.timestampToTime(Number(item.placeTime));\n            }\n\n            if (item.closeTime) {\n              item.closeTime = _this.$utils.timestampToTime(Number(item.closeTime));\n            }\n          });\n          _this.items = data;\n        } else {\n          console.log('错误错误');\n        }\n\n        _this.loading = false;\n      }, {\n        hasToken: true\n      });\n    },\n    inputShow: function inputShow(number) {\n      this.curPage.page = number;\n      var start = this.$moment(this.startTime).format('x');\n      var end = this.$moment(this.endTime).format('x');\n      var list = {\n        \"beginTime\": start,\n        \"endTime\": end,\n        \"pageSize\": 10,\n        \"pageIndex\": this.curPage.page ? this.curPage.page : 0\n      };\n      this.$vuetify.goTo(this.target, this.options); //平滑滚动到表头\n\n      this.getListData(list);\n    }\n  }, mapActions(['changeSnack']), {\n    changeTab: function changeTab() {\n      var list = {\n        \"beginTime\": this.$moment(this.startTime).format('x'),\n        \"endTime\": this.$moment(this.endTime).format('x'),\n        \"pageSize\": 10,\n        \"pageIndex\": 1\n      };\n      this.getListData(list);\n    },\n    search: function search() {\n      //搜索列表\n      if (this.startTime && this.endTime) {\n        var start = this.$moment(this.startTime).valueOf();\n        var end = this.$moment(this.endTime).valueOf();\n\n        if (end > start) {\n          var list = {\n            \"beginTime\": this.$moment(this.startTime).format('x'),\n            \"endTime\": this.$moment(this.endTime).format('x'),\n            \"pageSize\": 10,\n            \"pageIndex\": 1\n          };\n          this.getListData(list);\n        } else {\n          var msg = {\n            state: true,\n            errorText: {\n              type: 'info',\n              text: '开始时间不能大于结束时间'\n            }\n          };\n          this.changeSnack(msg);\n        }\n      } else {\n        var _msg = {\n          state: true,\n          errorText: {\n            type: 'info',\n            text: '请填写时间再搜索'\n          }\n        };\n        this.changeSnack(_msg);\n      }\n    },\n    doSomething: function doSomething() {\n      console.log('渲染了' + this.componentArr[this.tabIndex]);\n    }\n  })\n};",null]}