{"remainingRequest":"F:\\work\\lhds\\node_modules\\thread-loader\\dist\\cjs.js!F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js!F:\\work\\lhds\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\work\\lhds\\src\\mixins\\ruleData.js","dependencies":[{"path":"F:\\work\\lhds\\src\\mixins\\ruleData.js","mtime":1573718005324},{"path":"F:\\work\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:\\\\work\\\\lhds\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"F:\\\\work\\\\lhds\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport upSvg from '@/img/up.svg';\nimport Utils from '@/plugins/cryAes.js';\nimport { mapActions } from 'vuex';\nexport var ruleData = {\n  data: function data() {\n    return {\n      transition: 'fade-transition',\n      loading: true,\n      //控制骨架屏 true表示显示\n      upIcon: upSvg,\n      editType: false,\n      //新增\n      step: 1,\n      target: '#vRow',\n      options: {\n        duration: 1000,\n        offset: 0,\n        easing: 'easeInOutCubic'\n      },\n      curPage: {\n        page: 1,\n        size: 0\n      },\n      currentRule: {},\n      //当前的规则\n      showAddRule: false,\n      ruleList: []\n    };\n  },\n  watch: {\n    wssData: {\n      handler: function handler(nV, oV) {\n        this.getMessage();\n      },\n      deep: true\n    }\n  },\n  computed: {\n    wssData: function wssData() {\n      //wss传递的消息\n      return this.$store.state.collocationList;\n    }\n  },\n  methods: _objectSpread({}, mapActions(['changeLay', 'changeSnack']), {\n    changeTime: function changeTime(time) {\n      return this.$utils.timestampToTime(Number(time));\n    },\n    newRule: function newRule() {\n      this.showAddRule = true;\n      this.editType = false;\n    },\n    getMessage: function getMessage() {\n      //wss传递的消息\n      var result = this.wssData;\n\n      switch (result.code) {\n        case 20013:\n          //客户端在线\n          var json = JSON.stringify({\n            code: 1006\n          });\n          this.$sock.websocketsend(json);\n          break;\n\n        default:\n          break;\n      }\n    },\n    delRule: function delRule(id, index) {\n      var _this = this;\n\n      //删除规则\n      this.$xyDialog({\n        title: '删除规则',\n        content: '确定删除吗? 该操作不可撤销',\n        onOk: function onOk() {\n          _this.changeLay(true);\n\n          var state = _this.$sock.lookState();\n\n          $ax.getAjaxData('/EasWebUser/delRule', {\n            id: id\n          }, function (res) {\n            _this.changeLay(false);\n\n            if (res.code == 1) {\n              var msg = {\n                state: true,\n                errorText: {\n                  type: 'success',\n                  text: '删除成功'\n                }\n              };\n\n              _this.changeSnack(msg);\n\n              var json = JSON.stringify({\n                code: 1006\n              });\n              state == -1 ? _this.$sock.initWebSocket() : _this.$sock.websocketsend(json);\n              sessionStorage.removeItem('collocation'); //清空缓存里的rule/api\n\n              _this.ruleList.splice(index, 1);\n            }\n          }, {\n            hasToken: true\n          });\n        }\n      });\n    },\n    hideRule: function hideRule() {\n      //隐藏规则输入框\n      this.showAddRule = false;\n      this.getRuleList();\n    },\n    editRule: function editRule(item) {\n      //编辑规则\n      this.showAddRule = true;\n      this.editType = true;\n      this.currentRule = item;\n    },\n    inputShow: function inputShow(number) {\n      this.curPage.page = number;\n      this.$vuetify.goTo(this.target, this.options); //平滑滚动到表头\n\n      this.getRuleList();\n    },\n    unescapeF: function unescapeF(str) {\n      //unicode=>文字\n      return unescape(str.replace(/\\\\/g, \"%\"));\n    },\n    getRuleList: function getRuleList() {\n      var _this2 = this;\n\n      //规则列表\n      this.loading = true;\n      $ax.getAjaxData('/EasWebUser/getRule', {\n        code: this.code,\n        pageSize: 10,\n        pageIndex: this.curPage.page ? this.curPage.page : 0\n      }, function (res) {\n        _this2.loading = false;\n\n        if (res.code == 1) {\n          var list = res.data;\n          var arr = [];\n          list.forEach(function (item, index) {\n            var a = JSON.parse(Utils.decrypt(item.data));\n            a.id = item.id;\n            a.R0 = _this2.unescapeF(a.R0);\n            arr.push(a);\n          });\n          _this2.ruleList = arr;\n          _this2.curPage = {\n            page: res.pageIndex,\n            size: res.pageMaxPage\n          };\n          _this2.step = 1;\n        }\n      }, {\n        hasToken: true\n      });\n    }\n  }),\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    //在组件创建之前调用（放置页面加载时请求的Ajax）\n    _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //执行异步函数\n              next(function (vm) {\n                vm.getRuleList();\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    //路由离开前断开\n    this.$sock.close();\n    next();\n  }\n};",null]}