{"remainingRequest":"F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js!F:\\work\\lhds\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\work\\lhds\\src\\plugins\\date.js","dependencies":[{"path":"F:\\work\\lhds\\src\\plugins\\date.js","mtime":1573802291838},{"path":"F:\\work\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _toConsumableArray from \"F:\\\\work\\\\lhds\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.regexp.split\";\nvar startYear = 2018;\nvar endYear = 2050;\nexport function withData(param) {\n  return param < 10 ? '0' + param : '' + param;\n}\nexport function getLoopArray(start, end) {\n  var start = start || 0;\n  var end = end || 1;\n  var array = [];\n\n  for (var i = start; i <= end; i++) {\n    array.push(withData(i));\n  }\n\n  return array;\n}\nexport function transPickerValue(value) {\n  //将日期转化成Picker可识别的数组\n  var dateTimeArr = [];\n\n  if (value == '') {\n    dateTimeArr = dateTimePicker().dateTime;\n  } else {\n    var str = value.split(' '); //分成日期跟时间\n\n    var dateStr = str[0].split('-');\n    var timeStr = str[1].split(':');\n    var arr = [].concat(_toConsumableArray(dateStr), _toConsumableArray(timeStr));\n    var _Array = dateTimePicker().dateTimeArray;\n    arr.forEach(function (item, i) {\n      dateTimeArr.push(_Array[i].indexOf(item));\n    });\n  }\n\n  return dateTimeArr;\n}\nexport function getMonthDay(year, month) {\n  var flag = year % 400 == 0 || year % 4 == 0 && year % 100 != 0,\n      array = null;\n\n  switch (month) {\n    case '01':\n    case '03':\n    case '05':\n    case '07':\n    case '08':\n    case '10':\n    case '12':\n      array = getLoopArray(1, 31);\n      break;\n\n    case '04':\n    case '06':\n    case '09':\n    case '11':\n      array = getLoopArray(1, 30);\n      break;\n\n    case '02':\n      array = flag ? getLoopArray(1, 29) : getLoopArray(1, 28);\n      break;\n\n    default:\n      array = '月份格式不正确，请重新输入！';\n  }\n\n  return array;\n}\nexport function getNewDateArry() {\n  // 当前时间的处理\n  var newDate = new Date();\n  var year = withData(newDate.getFullYear()),\n      mont = withData(newDate.getMonth() + 1),\n      date = withData(newDate.getDate()),\n      hour = withData(newDate.getHours()),\n      minu = withData(newDate.getMinutes()),\n      seco = withData(newDate.getSeconds());\n  return [year, mont, date, hour, minu, seco];\n}\nexport function dateTimePicker() {\n  var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : startYear;\n  var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : endYear;\n  var date = arguments.length > 2 ? arguments[2] : undefined;\n  // 返回默认显示的数组和联动数组的声明\n  var dateTime = [],\n      dateTimeArray = [[], [], [], [], [], []]; // var start = startYear || 1978;\n  // var end = endYear || 2100;\n  // 默认开始显示数据\n\n  var defaultDate = date ? [].concat(_toConsumableArray(date.split(' ')[0].split('-')), _toConsumableArray(date.split(' ')[1].split(':'))) : getNewDateArry(); // 处理联动列表数据\n\n  /*年月日 时分秒*/\n\n  dateTimeArray[0] = getLoopArray(start, end);\n  dateTimeArray[1] = getLoopArray(1, 12);\n  dateTimeArray[2] = getMonthDay(defaultDate[0], defaultDate[1]);\n  dateTimeArray[3] = getLoopArray(0, 23);\n  dateTimeArray[4] = getLoopArray(0, 59);\n  dateTimeArray[5] = getLoopArray(0, 59);\n  dateTimeArray.forEach(function (current, index) {\n    dateTime.push(current.indexOf(defaultDate[index]));\n  });\n  return {\n    dateTimeArray: dateTimeArray,\n    dateTime: dateTime\n  };\n} // module.exports = {\n//   dateTimePicker: dateTimePicker,\n//   getMonthDay: getMonthDay\n// }",{"version":3,"sources":["F:\\work\\lhds\\src\\plugins\\date.js"],"names":["startYear","endYear","withData","param","getLoopArray","start","end","array","i","push","transPickerValue","value","dateTimeArr","dateTimePicker","dateTime","str","split","dateStr","timeStr","arr","Array","dateTimeArray","forEach","item","indexOf","getMonthDay","year","month","flag","getNewDateArry","newDate","Date","getFullYear","mont","getMonth","date","getDate","hour","getHours","minu","getMinutes","seco","getSeconds","defaultDate","current","index"],"mappings":"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","sourcesContent":["const startYear = 2018;\nconst endYear = 2050;\n\n\nexport function withData(param){\n  return param < 10 ? '0' + param : '' + param;\n}\nexport function getLoopArray(start,end){\n  var start = start || 0;\n  var end = end || 1;\n  var array = [];\n  for (var i = start; i <= end; i++) {\n    array.push(withData(i));\n  }\n  return array;\n}\n\nexport function transPickerValue(value){ //将日期转化成Picker可识别的数组\n      let dateTimeArr = [];\n      if(value == ''){\n          dateTimeArr = dateTimePicker().dateTime;\n      }else{\n          let str  = value.split(' ');//分成日期跟时间\n          let dateStr = str[0].split('-');\n          let timeStr = str[1].split(':');\n          let arr = [...dateStr,...timeStr];\n\n         let Array = dateTimePicker().dateTimeArray;\n         arr.forEach((item,i)=>{\n           dateTimeArr.push(Array[i].indexOf(item));\n         });\n      }\r\n\r\n        return dateTimeArr;\r\n}\n\nexport function getMonthDay(year,month){\n  var flag = year % 400 == 0 || (year % 4 == 0 && year % 100 != 0), array = null;\n\n  switch (month) {\n    case '01':\n    case '03':\n    case '05':\n    case '07':\n    case '08':\n    case '10':\n    case '12':\n      array = getLoopArray(1, 31)\n      break;\n    case '04':\n    case '06':\n    case '09':\n    case '11':\n      array = getLoopArray(1, 30)\n      break;\n    case '02':\n      array = flag ? getLoopArray(1, 29) : getLoopArray(1, 28)\n      break;\n    default:\n      array = '月份格式不正确，请重新输入！'\n  }\n  return array;\n}\nexport function getNewDateArry(){\n  // 当前时间的处理\n  var newDate = new Date();\n  var year = withData(newDate.getFullYear()),\n      mont = withData(newDate.getMonth() + 1),\n      date = withData(newDate.getDate()),\n      hour = withData(newDate.getHours()),\n      minu = withData(newDate.getMinutes()),\n      seco = withData(newDate.getSeconds());\n\n  return [year, mont, date, hour, minu, seco];\n}\nexport function dateTimePicker(start = startYear,end = endYear,date) {\n  // 返回默认显示的数组和联动数组的声明\n  var dateTime = [], dateTimeArray = [[],[],[],[],[],[]];\n  // var start = startYear || 1978;\n  // var end = endYear || 2100;\n  // 默认开始显示数据\n  var defaultDate = date ? [...date.split(' ')[0].split('-'), ...date.split(' ')[1].split(':')] : getNewDateArry();\n  // 处理联动列表数据\n  /*年月日 时分秒*/\n  dateTimeArray[0] = getLoopArray(start,end);\n  dateTimeArray[1] = getLoopArray(1, 12);\n  dateTimeArray[2] = getMonthDay(defaultDate[0], defaultDate[1]);\n  dateTimeArray[3] = getLoopArray(0, 23);\n  dateTimeArray[4] = getLoopArray(0, 59);\n  dateTimeArray[5] = getLoopArray(0, 59);\n\n  dateTimeArray.forEach((current,index) => {\n    dateTime.push(current.indexOf(defaultDate[index]));\n  });\n\n  return {\n    dateTimeArray: dateTimeArray,\n    dateTime: dateTime\n  }\n}\r\n\n// module.exports = {\n//   dateTimePicker: dateTimePicker,\n//   getMonthDay: getMonthDay\n// }\n"]}]}