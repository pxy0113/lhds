{"remainingRequest":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\pxy\\Downloads\\test\\lhds\\src\\router\\index.js","dependencies":[{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\src\\router\\index.js","mtime":1572955254137},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572955172692},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1572955235189},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":1572955171173},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\eslint-loader\\index.js","mtime":1572955195504}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n\n/**\r\n * Vue Router\r\n *\r\n * @library\r\n *\r\n * https://router.vuejs.org/en/\r\n */\n// Lib imports\nimport Vue from 'vue';\nimport VueAnalytics from 'vue-analytics';\nimport Router from 'vue-router'; // import Meta from 'vue-meta'\n\nimport vuex from \"../store/index\"; // Routes\n\nimport paths from \"./paths\";\nimport mPaths from \"./mPaths\";\n\nvar detectDeviceType = function detectDeviceType() {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ? 'Mobile' : 'Desktop';\n};\n\nvar type = detectDeviceType();\nvar testPaths = type == 'Mobile' ? mPaths : paths;\n\nfunction route(path, view, name) {\n  return {\n    name: name,\n    path: path,\n    component: function component(resolve) {\n      return import(\"@/views/\".concat(view, \".vue\")).then(resolve);\n    } // \treturn {\n    // \t\tname: name || view,\n    // \t\tpath,\n    // \t\tcomponent: (resovle) => import(\n    // \t\t\t`@/views/${view}.vue`\n    // \t\t).then(resovle)\n    // \t}\n    // \n\n  };\n}\n\nVue.use(Router); // Create a new router\n\nvar router = new Router({\n  // mode: 'history',\n  // base:'/dist/',\n  routes: testPaths.map(function (path) {\n    return route(path.path, path.view, path.name);\n  }).concat([{\n    path: '*',\n    redirect: '/dashboard'\n  }]),\n  scrollBehavior: function scrollBehavior(to, from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition;\n    }\n\n    if (to.hash) {\n      return {\n        selector: to.hash\n      };\n    }\n\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n}); // Vue.use(Meta)\n\nrouter.beforeEach(function (to, from, next) {\n  //会在任意路由跳转前执行，next一定要记着执行，不然路由不能跳转了\n  if (to.path == '/login') {\n    console.log('我就是要去登陆啊');\n    next();\n  } else {\n    //去的不是登陆页\n    if (!sessionStorage.token) {\n      //未登录\n      if (from.path == '/login') {\n        next();\n      } else {\n        vuex.state.showBar = false;\n        next('/login');\n      }\n    } else {\n      next();\n    }\n  }\n}); // Bootstrap Analytics\n// Set in .env\n// https://github.com/MatteoGabriele/vue-analytics\n\nif (process.env.GOOGLE_ANALYTICS) {\n  Vue.use(VueAnalytics, {\n    id: process.env.GOOGLE_ANALYTICS,\n    router: router,\n    autoTracking: {\n      page: process.env.NODE_ENV !== 'development'\n    }\n  });\n}\n\nexport default router;",null]}