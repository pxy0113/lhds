{"remainingRequest":"F:\\work\\lhds\\node_modules\\thread-loader\\dist\\cjs.js!F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js!F:\\work\\lhds\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\work\\lhds\\src\\mixins\\indexData.js","dependencies":[{"path":"F:\\work\\lhds\\src\\mixins\\indexData.js","mtime":1575253900859},{"path":"F:\\work\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:\\\\work\\\\lhds\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"F:\\\\work\\\\lhds\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//主页的mixins数据\t\nimport BTC from '@/img/BTC.png';\nimport ETH from '@/img/ETH.png';\nimport USDT from '@/img/USDT.png';\nimport { mapActions } from 'vuex';\nimport echarts from 'echarts';\nimport { line } from '@/plugins/chart.js';\nexport var indexData = {\n  data: function data() {\n    return {\n      defaultNum: 0,\n      //图表默认显示的天数\n      numArr: [7, 15],\n      //天数数组\n      tableData: {\n        labels: this.getBeforeDay(),\n        title: '最近七日收益走势图',\n        series: [0, 0, 0, 0, 0, 0, 0]\n      },\n      Bimg: BTC,\n      Eimg: ETH,\n      Uimg: USDT,\n      percentage: 0,\n      dateProfit: [],\n      profitList: {} //所有利润信息\n\n    };\n  },\n  methods: _objectSpread({}, mapActions(['changeLay']), {\n    getBeforeDay: function getBeforeDay() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 7;\n      var arr = [];\n\n      for (var i = 1; i < n; i++) {\n        var a = this.$moment(new Date()).subtract(i, 'days').format('MM-DD');\n        arr.unshift(a);\n      }\n\n      return arr;\n    },\n    getDateProfit: function getDateProfit() {\n      var _this = this;\n\n      var nums = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 7;\n      var list = {\n        num: nums,\n        currency: 'USDT'\n      };\n      new Promise(function (resolve) {\n        $ax.getAjaxData('/EasWebUser/getDateProfit', list, function (res) {\n          if (res.code == 1) {\n            var data = res.data;\n            var arr = [];\n            data.forEach(function (item) {\n              arr.push(item.toFixed(2)); //保留两位小数\n            });\n            _this.percentage = res.percentage;\n            _this.tableData.series = arr;\n\n            var myChart = _this.$echarts.init(document.getElementById('chart'));\n\n            var option = myChart.getOption();\n            option.xAxis[0].data = _this.getBeforeDay(nums);\n            option.title[0].text = \"\\u6700\\u8FD1\".concat(nums, \"\\u65E5\\u6536\\u76CA\\u8D70\\u52BF\\u56FE\");\n            option.series[0].data = _this.tableData.series;\n            myChart.setOption(option);\n            resolve();\n          } else {\n            resolve();\n          }\n        }, {\n          hasToken: true\n        });\n      });\n    },\n    getAllProfit: function getAllProfit() {\n      var _this2 = this;\n\n      new Promise(function (resolve) {\n        $ax.getAjaxData('/EasWebUser/getAllProfit', {}, function (res) {\n          if (res.code == 1) {\n            _this2.profitList = res.data;\n            resolve();\n          } else {\n            resolve();\n          }\n        }, {\n          hasToken: true\n        });\n      });\n    },\n    resizeChart: function resizeChart() {\n      var myChart = echarts.init(document.getElementById('chart'));\n      myChart.resize();\n    }\n  }),\n  mounted: function mounted() {\n    //模板被渲染完毕之后执行\n    var myChart = echarts.init(document.getElementById('chart'));\n    myChart.setOption(line(this.tableData));\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    //在组件创建之前调用（放置页面加载时请求的Ajax）\n    _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //执行异步函数\n              next(function (vm) {\n                vm.changeLay(true);\n                var promiseAll = [vm.getDateProfit(), vm.getAllProfit()];\n                Promise.all(promiseAll).then(function (results) {\n                  vm.changeLay(false);\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n};",null]}