{"remainingRequest":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\pxy\\Downloads\\test\\lhds\\src\\plugins\\chart.js","dependencies":[{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\src\\plugins\\chart.js","mtime":1572955254124},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572955172692},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1572955235189},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":1572955171173},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\eslint-loader\\index.js","mtime":1572955195504}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport echarts from 'echarts';\nimport vuex from \"../store/index\";\n\nvar line = function line(datas) {\n  var type = vuex.state.currentType; //手机端不需要grids\n\n  var grids = {\n    top: 30,\n    left: '4%',\n    right: '5%',\n    containLabel: true\n  };\n  return {\n    grid: type == 'Mobile' ? {\n      top: 30\n    } : grids,\n    title: {\n      show: false,\n      text: datas.title,\n      subtext: '',\n      x: 'center',\n      textStyle: {\n        color: '#455A64',\n        fontWeight: 700\n      }\n    },\n    xAxis: {\n      type: 'category',\n      boundaryGap: false,\n      data: datas.labels\n    },\n    yAxis: {\n      type: 'value'\n    },\n    series: [{\n      data: datas.series,\n      type: 'line',\n      color: '#66BB6A',\n      smooth: true,\n      areaStyle: {}\n    }]\n  };\n};\n\nvar bar = function bar(title, xData, yData, series) {\n  return {\n    title: {\n      text: title\n    },\n    tooltip: {},\n    xAxis: {\n      data: xData\n    },\n    yAxis: {},\n    series: series\n  };\n};\n\nvar pie = function pie(t, pay) {\n  return {\n    title: {\n      text: t,\n      subtext: '',\n      x: 'center'\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n    },\n    // backgroundColor: '#2c343c', //设置图标的背景色,\n    label: {\n      normal: {\n        fontStyle: 'italic' //文字字体的风格\n\n      }\n    },\n    labelLine: {\n      normal: {\n        lineStyle: {\n          color: 'rgba(255, 255, 255, 0.3)' //设置标签的视觉引导线\n\n        }\n      }\n    },\n    legend: {\n      data: [pay[0].name, pay[1].name, pay[2].name, pay[3].name],\n      right: 'center',\n      bottom: 0,\n      orient: 'horizontal'\n    },\n    series: [{\n      name: t,\n      //系列名称, 用于toolitp的显示\n      type: 'pie',\n      //图形的类型\n      radius: '50',\n      //饼图的半径\n      roseType: 'angle',\n      //通过roseType绘制南丁格尔图\n      data: [//数据\n      {\n        value: pay[0].value,\n        name: pay[0].name\n      }, {\n        value: pay[1].value,\n        name: pay[1].name\n      }, {\n        value: pay[2].value,\n        name: pay[2].name\n      }, {\n        value: pay[3].value,\n        name: pay[3].name\n      }],\n      itemStyle: {\n        //设置每个item的颜色\n        normal: {\n          color: function color(params) {\n            //params是一个对象, 传入的是seriesIndex, dataIndex, data, value 等各个参数。\n            var colorList = [// \t\t\t\t\t\t\t'#C1232B','#B5C334','#FCCE10','#E87C25','#27727B',\n            // \t\t\t\t\t\t\t'#FE8463','#9BCA63','#FAD860','#F3A43B','#60C0DD',\n            // \t\t\t\t\t\t\t'#D7504B','#C6E579','#F4E001','#F0805A','#26C0C0'\n            'pink', 'yellow', 'skyblue', 'green', 'orange'];\n            return colorList[params.dataIndex];\n          } // shadowBlur: 100\n\n        }\n      }\n    }]\n  };\n};\n\nvar p = function p(t, pay) {\n  return {\n    backgroundColor: '#2c343c',\n    title: {\n      text: 'Customized Pie',\n      left: 'center',\n      top: 20,\n      textStyle: {\n        color: '#ccc'\n      }\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n    },\n    visualMap: {\n      show: false,\n      min: 80,\n      max: 600,\n      inRange: {\n        colorLightness: [0, 1]\n      }\n    },\n    series: [{\n      name: '访问来源',\n      type: 'pie',\n      radius: '55%',\n      center: ['50%', '50%'],\n      data: [{\n        value: 335,\n        name: '直接访问'\n      }, {\n        value: 310,\n        name: '邮件营销'\n      }, {\n        value: 274,\n        name: '联盟广告'\n      }, {\n        value: 235,\n        name: '视频广告'\n      }, {\n        value: 400,\n        name: '搜索引擎'\n      }].sort(function (a, b) {\n        return a.value - b.value;\n      }),\n      roseType: 'radius',\n      label: {\n        normal: {\n          textStyle: {\n            color: 'rgba(255, 255, 255, 0.3)'\n          }\n        }\n      },\n      labelLine: {\n        normal: {\n          lineStyle: {\n            color: 'rgba(255, 255, 255, 0.3)'\n          },\n          smooth: 0.2,\n          length: 10,\n          length2: 20\n        }\n      },\n      itemStyle: {\n        normal: {\n          color: '#c23531',\n          shadowBlur: 200,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      },\n      animationType: 'scale',\n      animationEasing: 'elasticOut',\n      animationDelay: function animationDelay(idx) {\n        return Math.random() * 200;\n      }\n    }]\n  };\n};\n\nvar circle = function circle(t, pay) {\n  return {\n    title: {\n      text: '某站点用户访问来源',\n      subtext: '',\n      x: 'center'\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n    },\n    legend: {\n      top: 20,\n      display: 'flex',\n      orient: 'horizontal',\n      // left:'right',\n      data: [pay[0].name, pay[1].name, pay[2].name, pay[3].name]\n    },\n    series: [{\n      name: '访问来源',\n      type: 'pie',\n      radius: '45%',\n      center: ['40%', '60%'],\n      data: [//数据\n      {\n        value: pay[0].value,\n        name: pay[0].name\n      }, {\n        value: pay[1].value,\n        name: pay[1].name\n      }, {\n        value: pay[2].value,\n        name: pay[2].name\n      }, {\n        value: pay[3].value,\n        name: pay[3].name\n      }],\n      itemStyle: {\n        emphasis: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }]\n  };\n};\n\nvar pp = function pp(t, pay) {\n  return {\n    title: {\n      text: '',\n      subtext: '',\n      x: 'left',\n      top: 18,\n      // left:120,\n      // bottom:0,\n      textStyle: {\n        fontSize: '14',\n        color: '#515a6e',\n        fontWeight: '400'\n      }\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n    },\n    legend: {\n      orient: 'align',\n      left: 'bottom',\n      data: [pay[0].name, pay[1].name, pay[2].name, pay[3].name]\n    },\n    series: [{\n      name: t,\n      type: 'pie',\n      radius: '40%',\n      center: ['40%', '60%'],\n      data: [//数据\n      {\n        value: pay[0].value,\n        name: pay[0].name\n      }, {\n        value: pay[1].value,\n        name: pay[1].name\n      }, {\n        value: pay[2].value,\n        name: pay[2].name\n      }, {\n        value: pay[3].value,\n        name: pay[3].name\n      }],\n      itemStyle: {\n        emphasis: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }]\n  };\n};\n\nexport { line };",null]}