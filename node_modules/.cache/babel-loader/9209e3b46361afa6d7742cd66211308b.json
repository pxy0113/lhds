{"remainingRequest":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\pxy\\Downloads\\test\\lhds\\src\\components\\common\\Datepick.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\src\\components\\common\\Datepick.vue","mtime":1574651315622},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572955172692},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1572955235189},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":1572955171173},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572955172692},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\vue-loader\\lib\\index.js","mtime":1572955240129}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getMonthDay, dateTimePicker, transPickerValue } from '@/plugins/newDate.js';\nimport upSvg from '@/img/up.svg';\nimport BScroll from 'better-scroll';\nimport { scrollMixins } from '@/mixins/scroll.js';\nimport { mapActions } from 'vuex';\nexport default {\n  mixins: [scrollMixins],\n  data: function data() {\n    return {\n      dateStr: '',\n      firstTime: '2019-01-11',\n      text: ['年', '月', '日'],\n      dateTime: [0, 0, 0],\n      wheels: [],\n      display: false,\n      pickerData: []\n    };\n  },\n  computed: {\n    dateTimeArray: function dateTimeArray() {\n      return dateTimePicker().dateTimeArray;\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    showIcon: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    value: {\n      handler: function handler(nV, oV) {\n        this.firstTime = nV;\n        this.init();\n      },\n      immediate: true\n    },\n    display: function display(nV) {\n      !nV && this.scrollToOrigin();\n    }\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      //初始化\n      this.dateTime = transPickerValue(this.firstTime);\n      this.pickerData = this.dateTimeArray;\n      var brr = [];\n      this.dateTime.forEach(function (item, i) {\n        brr.push(_this.pickerData[i][_this.dateTime[i]]);\n      });\n      this.dateStr = \"\".concat(brr[0], \"-\").concat(brr[1], \"-\").concat(brr[2]);\n    },\n    cancelSelect: function cancelSelect() {\n      //取消选择\n      this.display = false;\n    },\n    scrollToOrigin: function scrollToOrigin() {\n      var _this2 = this;\n\n      //滚动位置回到原点\n      this.beforeClose();\n      this.dateTime.forEach(function (item, i) {\n        _this2.wheels[i].wheelTo(item);\n      });\n    },\n    selectOk: function selectOk() {\n      var _this3 = this;\n\n      //确定选择\n      var arr = [];\n      this.wheels.forEach(function (wheel, i) {\n        arr.push(wheel.getSelectedIndex()); //bs自带的方法 获取元素下标\n      });\n      this.dateTime = arr;\n      var brr = [];\n      arr.forEach(function (item, i) {\n        brr.push(_this3.pickerData[i][arr[i]]);\n      });\n      var str = \"\".concat(brr[0], \"-\").concat(brr[1], \"-\").concat(brr[2]);\n      this.dateStr = str;\n      this.$emit('changeTime', str);\n      this.display = false;\n    },\n    show: function show() {\n      var _this4 = this;\n\n      //显示选择器\n      this.display = true;\n      this.$nextTick(function () {\n        var wheelWrapper = _this4.$refs.wheelWrapper;\n\n        _this4.pickerData.forEach(function (item, index) {\n          _this4.createWheel(wheelWrapper, index).enable();\n        });\n      });\n      this.afterOpen();\n    },\n    _getCurrentValue: function _getCurrentValue() {\n      var _this5 = this;\n\n      var value = [];\n      this.wheels.forEach(function (wheel, i) {\n        var j = wheel.getSelectedIndex(); //bs自带的方法 获取元素下标\n\n        value.push({\n          index: j,\n          value: _this5.pickerData[i][j]\n        });\n      });\n      return value;\n    },\n    createWheel: function createWheel(wheelWrapper, i) {\n      var _this6 = this;\n\n      //创建bs的wheel配置\n      if (!this.wheels[i]) {\n        var wheel = this.wheels[i] = new BScroll(wheelWrapper.children[i], {\n          wheel: {\n            selectedIndex: this.dateTime[i],\n            rotate: 25\n          },\n          swipeTime: 1500\n        });\n        wheel.on('scrollEnd', function () {\n          var newIndex = _this6._getCurrentValue()[i].index;\n\n          var newValue = _this6._getCurrentValue()[i].value;\n        });\n      } else {\n        this.wheels[i].refresh();\n      }\n\n      return this.wheels[i];\n    }\n  }\n};",null]}