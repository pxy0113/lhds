{"remainingRequest":"F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js!F:\\work\\lhds\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\work\\lhds\\src\\components\\core\\index.js","dependencies":[{"path":"F:\\work\\lhds\\src\\components\\core\\index.js","mtime":1575343190348},{"path":"F:\\work\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport upperFirst from 'lodash/upperFirst';\nimport camelCase from 'lodash/camelCase'; //./components 其组件目录的相对路径 true 是否查询其子目录 /\\.vue$/ 匹配基础组件文件命的正则\n\nvar requireComponent = require.context('@/components', true, /\\.vue$/);\n\nrequireComponent.keys().forEach(function (fileName) {\n  var componentConfig = requireComponent(fileName); //获取组件配置 \n  //获取组件的驼峰命名 camelCase剥去文件明开头的'./'和结束的扩展名\n\n  var componentName = upperFirst(camelCase(fileName.replace(/^\\.\\//, '').replace(/\\.\\w+$/, '')));\n  /*\n     如果这个组件选项是通过 `export default` 导出的，\n    那么就会优先使用 `.default`，\n    否则回退到使用模块的根。*/\n\n  Vue.component(componentName, componentConfig.default || componentConfig);\n});",{"version":3,"sources":["F:\\work\\lhds\\src\\components\\core\\index.js"],"names":["Vue","upperFirst","camelCase","requireComponent","require","context","keys","forEach","fileName","componentConfig","componentName","replace","component","default"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB,C,CAEA;;AACA,IAAMC,gBAAgB,GAAGC,OAAO,CAACC,OAAR,CACvB,cADuB,EACP,IADO,EACD,QADC,CAAzB;;AAIAF,gBAAgB,CAACG,IAAjB,GAAwBC,OAAxB,CAAgC,UAAAC,QAAQ,EAAI;AAC1C,MAAMC,eAAe,GAAGN,gBAAgB,CAACK,QAAD,CAAxC,CAD0C,CACS;AAEnD;;AACA,MAAME,aAAa,GAAGT,UAAU,CAC9BC,SAAS,CAACM,QAAQ,CAACG,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,EAA8BA,OAA9B,CAAsC,QAAtC,EAAgD,EAAhD,CAAD,CADqB,CAAhC;AAGC;;;;;AAKDX,EAAAA,GAAG,CAACY,SAAJ,CAAcF,aAAd,EAA6BD,eAAe,CAACI,OAAhB,IAA2BJ,eAAxD;AACD,CAbD","sourcesContent":["import Vue from 'vue'\nimport upperFirst from 'lodash/upperFirst'\nimport camelCase from 'lodash/camelCase'\n\n//./components 其组件目录的相对路径 true 是否查询其子目录 /\\.vue$/ 匹配基础组件文件命的正则\nconst requireComponent = require.context(\n  '@/components', true, /\\.vue$/\n)\n\nrequireComponent.keys().forEach(fileName => {\n  const componentConfig = requireComponent(fileName);//获取组件配置 \n  \n  //获取组件的驼峰命名 camelCase剥去文件明开头的'./'和结束的扩展名\n  const componentName = upperFirst(\n    camelCase(fileName.replace(/^\\.\\//, '').replace(/\\.\\w+$/, ''))\n  )\n   /*\n      如果这个组件选项是通过 `export default` 导出的，\n     那么就会优先使用 `.default`，\n     否则回退到使用模块的根。*/\r\n\n  Vue.component(componentName, componentConfig.default || componentConfig)\n})\n"]}]}