{"remainingRequest":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\pxy\\Downloads\\test\\lhds\\src\\plugins\\newDate.js","dependencies":[{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\src\\plugins\\newDate.js","mtime":1574651315644},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572955172692},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1572955235189},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":1572955171173},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\eslint-loader\\index.js","mtime":1572955195504}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:\\\\Users\\\\pxy\\\\Downloads\\\\test\\\\lhds\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\n//滚动日期选择器\nvar startYear = 2018;\nvar endYear = 2050;\nexport function withData(param) {\n  return param < 10 ? '0' + param : '' + param;\n}\nexport function getLoopArray(start, end) {\n  var start = start || 0;\n  var end = end || 1;\n  var array = [];\n\n  for (var i = start; i <= end; i++) {\n    array.push(withData(i));\n  }\n\n  return array;\n}\nexport function transPickerValue(value) {\n  //将日期转化成Picker可识别的数组\n  var dateTimeArr = [];\n\n  if (value == '') {\n    dateTimeArr = dateTimePicker().dateTime;\n  } else {\n    var str = value.split(' '); //分成日期跟时间\n\n    var arr = str[0].split('-');\n    var _Array = dateTimePicker().dateTimeArray;\n    arr.forEach(function (item, i) {\n      dateTimeArr.push(_Array[i].indexOf(item));\n    });\n  }\n\n  return dateTimeArr;\n}\nexport function getMonthDay(year, month) {\n  var flag = year % 400 == 0 || year % 4 == 0 && year % 100 != 0,\n      array = null;\n\n  switch (month) {\n    case '01':\n    case '03':\n    case '05':\n    case '07':\n    case '08':\n    case '10':\n    case '12':\n      array = getLoopArray(1, 31);\n      break;\n\n    case '04':\n    case '06':\n    case '09':\n    case '11':\n      array = getLoopArray(1, 30);\n      break;\n\n    case '02':\n      array = flag ? getLoopArray(1, 29) : getLoopArray(1, 28);\n      break;\n\n    default:\n      array = '月份格式不正确，请重新输入！';\n  }\n\n  return array;\n}\nexport function getNewDateArry() {\n  // 当前日期的处理\n  var newDate = new Date();\n  var year = withData(newDate.getFullYear()),\n      mont = withData(newDate.getMonth() + 1),\n      date = withData(newDate.getDate());\n  return [year, mont, date];\n}\nexport function dateTimePicker() {\n  var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : startYear;\n  var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : endYear;\n  var date = arguments.length > 2 ? arguments[2] : undefined;\n  // 返回默认显示的数组和联动数组的声明\n  var dateTime = [],\n      dateTimeArray = [[], [], []]; // var start = startYear || 1978;\n  // var end = endYear || 2100;\n  // 默认开始显示数据\n\n  var defaultDate = date ? [].concat(_toConsumableArray(date.split(' ')[0].split('-')), _toConsumableArray(date.split(' ')[1].split(':'))) : getNewDateArry(); // 处理联动列表数据\n\n  /*年月日 时分秒*/\n\n  dateTimeArray[0] = getLoopArray(start, end);\n  dateTimeArray[1] = getLoopArray(1, 12);\n  dateTimeArray[2] = getMonthDay(defaultDate[0], defaultDate[1]);\n  dateTimeArray.forEach(function (current, index) {\n    dateTime.push(current.indexOf(defaultDate[index]));\n  });\n  return {\n    dateTimeArray: dateTimeArray,\n    dateTime: dateTime\n  };\n}",null]}