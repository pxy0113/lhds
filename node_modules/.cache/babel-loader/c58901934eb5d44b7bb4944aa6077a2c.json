{"remainingRequest":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\pxy\\Downloads\\test\\lhds\\src\\components\\common\\index.js","dependencies":[{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\src\\components\\common\\index.js","mtime":1581773520729},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572955172692},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1572955235189},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":1572955171173},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\eslint-loader\\index.js","mtime":1572955195504}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport upperFirst from 'lodash/upperFirst';\nimport camelCase from 'lodash/camelCase'; //./components 其组件目录的相对路径 true 是否查询其子目录 /\\.vue$/ 匹配基础组件文件命的正则\n\nvar requireComponent = require.context('@/components', true, /\\.vue$/);\n\nrequireComponent.keys().forEach(function (fileName) {\n  var componentConfig = requireComponent(fileName); //获取组件配置 \n  //获取组件的驼峰命名 camelCase剥去文件明开头的'./'和结束的扩展名\n\n  var componentName = upperFirst(camelCase(fileName.replace(/^\\.\\//, '').replace(/\\.\\w+$/, '')));\n  /*\r\n     如果这个组件选项是通过 `export default` 导出的，\r\n    那么就会优先使用 `.default`，\r\n    否则回退到使用模块的根。*/\n\n  Vue.component(componentName, componentConfig.default || componentConfig);\n});",null]}