{"remainingRequest":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\pxy\\Downloads\\test\\lhds\\src\\mixins\\addRuleData.js","dependencies":[{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\src\\mixins\\addRuleData.js","mtime":1574677656758},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572955172692},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1572955235189},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":1572955171173},{"path":"C:\\Users\\pxy\\Downloads\\test\\lhds\\node_modules\\eslint-loader\\index.js","mtime":1572955195504}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"C:\\\\Users\\\\pxy\\\\Downloads\\\\test\\\\lhds\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { mapActions } from 'vuex';\nimport Utils from '@/plugins/cryAes.js';\nexport var addRuleData = {\n  props: {\n    ruleObj: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    edit: {\n      type: Boolean,\n      default: false\n    },\n    parentName: {\n      //父组件的名字\n      type: String,\n      default: 'Rule'\n    }\n  },\n  watch: {\n    edit: {\n      handler: 'transPropsData',\n      immediate: true\n    }\n  },\n  data: function data() {\n    return {\n      rules: {\n        required: function required(v) {\n          return !!v || '必填';\n        },\n        length: function length(v) {\n          return v && v.length <= 68 || '超出长度';\n        },\n        isEmpty: function isEmpty(v) {\n          return /\\S/.test(v) || '不可为空';\n        },\n        size: function size(v) {\n          return v > 0 || '必须大于0';\n        },\n        percent: function percent(v) {\n          return v <= 100 || '不可超出100';\n        },\n        not: function not(v) {\n          return !/[\\u4E00-\\u9FA5]/g.test(v) || '不能是中文';\n        }\n      },\n      valid: true,\n      ruleName: '',\n      //规则名称\n      jData: {\n        //建仓\n        R1: 0,\n        //买入跌幅\n        R3: 1,\n        //单次买入金额\n        R2: 0,\n        //跌幅回调\n        R54: null,\n        //计价货币\n        R11: false,\n        //允许强制建仓\n        R12: 0,\n        //强制建仓\n        R13: false,\n        //允许\n        R14: 1,\n        //分钟内上涨\n        R15: 0,\n        //追涨建仓\n        R36: 1,\n        //防插针\n        R7: 0,\n        //单次补仓跌幅\n        R10: 0,\n        //补仓回调\n        R9: 0,\n        //单次补仓金额\n        R8: 0,\n        //补仓\n        R19: false,\n        //补仓单独卖出\n        R20: false,\n        //补单可进行补仓\n        R4: 0,\n        //卖出涨幅\n        R5: 0,\n        //涨幅回调\n        R6: 0,\n        //止损跌幅\n        R16: false,\n        //允许分钟内下跌\n        R17: 0,\n        //分钟内下跌\n        R18: 0,\n        //杀跌平仓\n        R26: false,\n        //允许补仓\n        R27: 0,\n        //分钟内下跌\n        R28: 0,\n        //时\n        R29: 0,\n        //补仓比例更改为\n        R30: 0,\n        //分钟后回复数值\n        R21: false,\n        //允许止损\n        R22: 0,\n        R23: 0,\n        R24: 0,\n        R25: 0,\n        R31: false,\n        //允许建仓\n        R32: 0,\n        R33: 0,\n        R34: 0,\n        R35: 0\n      },\n      activeRule: 0,\n      curcy: 1,\n      //当前的R54(货币)\n      currency: [{\n        id: 1,\n        value: 'USDT'\n      }, {\n        id: 2,\n        value: 'ETH'\n      }, {\n        id: 3,\n        value: 'BTC'\n      }],\n      child: ['建仓规则', '平仓规则', '补仓规则', '其他规则'],\n      type: 0\n    };\n  },\n  methods: _objectSpread({}, mapActions(['changeLay', 'changeSnack']), {\n    wssSave: function wssSave() {\n      //传递数据给ws\n      var json = JSON.stringify({\n        code: 1006\n      });\n      this.$sock.websocketsend(json);\n    },\n    listenState: function listenState(name) {\n      this.jData.R19 = name;\n      name == true ? '' : this.jData.R20 = false;\n    },\n    validateData: function validateData() {\n      //点击下一步的时候验证\n      if (this.$refs.form.validate()) {\n        this.activeRule++;\n        this.$refs.form.resetValidation();\n      } else {\n        this.changeSnack({\n          state: true,\n          errorText: {\n            type: 'info',\n            text: '表单填写错误'\n          }\n        });\n      }\n    },\n    transPropsData: function transPropsData() {\n      //编辑初始化对数据进行转换\n      if (this.edit) {\n        var item = _objectSpread({}, this.ruleObj);\n\n        this.curcy = Number(item.R54);\n        this.ruleName = item.R0 ? this.unescapeF(item.R0) : '';\n        var _ref = [item.R11 == 1 ? true : false, item.R13 == 1 ? true : false, item.R19 == 1 ? true : false, item.R16 == 1 ? true : false, item.R20 == 1 ? true : false, item.R21 == 1 ? true : false, item.R26 == 1 ? true : false, item.R31 == 1 ? true : false],\n            R11 = _ref[0],\n            R13 = _ref[1],\n            R19 = _ref[2],\n            R16 = _ref[3],\n            R20 = _ref[4],\n            R21 = _ref[5],\n            R26 = _ref[6],\n            R31 = _ref[7];\n        this.jData = Object.assign({}, item, {\n          R11: R11,\n          R13: R13,\n          R19: R19,\n          R16: R16,\n          R20: R20,\n          R21: R21,\n          R26: R26,\n          R31: R31\n        });\n      }\n    },\n    selectCurrency: function selectCurrency(e) {\n      //选择计价货币\n      this.jData.R54 = e;\n    },\n    hideRule: function hideRule() {\n      this.$emit('hideRule');\n    },\n    allowJc: function allowJc() {\n      //是否强制建仓\n      this.jData.R11 = !this.jData.R11;\n\n      if (!this.jData.R11) {\n        //没被选中\n        this.jData.R12 = 0;\n      }\n    },\n    allowSup: function allowSup() {\n      this.jData.R13 = !this.jData.R13;\n\n      if (!this.jData.R13) {\n        this.jData.R14 = 0;\n        this.jData.R15 = 0;\n        this.jData.R36 = 0;\n      }\n    },\n    allowPc: function allowPc() {\n      //允许-平仓\n      this.jData.R16 = !this.jData.R16;\n\n      if (!this.jData.R16) {\n        this.jData.R17 = 0;\n        this.jData.R18 = 0;\n      }\n    },\n    allowQtBc: function allowQtBc() {\n      //其他规则-启用补仓\n      this.jData.R26 = !this.jData.R26;\n\n      if (!this.jData.R26) {\n        this.jData.R27 = 0;\n        this.jData.R28 = 0;\n        this.jData.R29 = 0;\n        this.jData.R30 = 0;\n      }\n    },\n    allowQtZs: function allowQtZs() {\n      //其他规则-启用止损\n      this.jData.R21 = !this.jData.R21;\n\n      if (!this.jData.R21) {\n        this.jData.R22 = 0;\n        this.jData.R23 = 0;\n        this.jData.R24 = 0;\n        this.jData.R25 = 0;\n      }\n    },\n    allowQtJc: function allowQtJc() {\n      //其他规则-启用建仓\n      this.jData.R31 = !this.jData.R31;\n\n      if (!this.jData.R31) {\n        this.jData.R32 = 0;\n        this.jData.R33 = 0;\n        this.jData.R34 = 0;\n        this.jData.R35 = 0;\n      }\n    },\n    unescapeF: function unescapeF(str) {\n      //unicode=>文字\n      return unescape(str.replace(/\\\\/g, \"%\"));\n    },\n    charToUnicode: function charToUnicode(str) {\n      var res = [];\n\n      for (var i = 0; i < str.length; i++) {\n        res[i] = (\"00\" + str.charCodeAt(i).toString(16)).slice(-4);\n      }\n\n      return \"%u\" + res.join(\"%u\");\n    },\n    beforePostRule: function beforePostRule() {\n      //提交前整理\n      var title = this.ruleName.replace(/\\s+/g, '');\n      var _ref2 = [this.curcy, this.charToUnicode(title), this.jData.R11 ? 1 : 0, this.jData.R13 ? 1 : 0, this.jData.R19 ? 1 : 0, this.jData.R16 ? 1 : 0, this.jData.R20 ? 1 : 0, this.jData.R21 ? 1 : 0, this.jData.R26 ? 1 : 0, this.jData.R31 ? 1 : 0],\n          R54 = _ref2[0],\n          R0 = _ref2[1],\n          R11 = _ref2[2],\n          R13 = _ref2[3],\n          R19 = _ref2[4],\n          R16 = _ref2[5],\n          R20 = _ref2[6];\n\n      var list = _objectSpread({}, this.jData, {\n        R54: R54,\n        R0: R0,\n        R11: R11,\n        R13: R13,\n        R19: R19,\n        R16: R16,\n        R20: R20\n      });\n\n      for (var i in list) {\n        //数字转成了字符\n        if (typeof list[i] == 'number') {\n          list[i] = list[i].toString();\n        }\n      }\n\n      return {\n        list: list,\n        title: title\n      };\n    },\n    ruleAction: function ruleAction(obj) {\n      var _this = this;\n\n      //父组件是Rule时执行\n      var url = this.edit ? '/EasWebUser/changeRule' : '/EasWebUser/addRule';\n      $ax.getAjaxData(url, obj, function (res) {\n        _this.changeLay(false);\n\n        if (res.code == 1) {\n          var msg = {\n            state: true,\n            errorText: {\n              type: 'success',\n              text: _this.edit ? '编辑成功' : '添加成功'\n            }\n          };\n\n          _this.changeSnack(msg);\n\n          var state = _this.$sock.lookState();\n\n          state == -1 ? _this.$sock.initWebSocket() : _this.wssSave();\n          sessionStorage.removeItem('collocation'); //清空缓存里的rule/api\n\n          Object.assign(_this.$data, _this.$options.data());\n\n          _this.hideRule();\n        }\n      }, {\n        hasToken: true\n      });\n    },\n    demAction: function demAction(obj) {\n      //父组件是Dem时执行\n      var json = JSON.stringify({\n        code: 1008,\n        data: [{\n          id: obj.id,\n          data: obj.data\n        }]\n      });\n      this.$sock.websocketsend(json);\n      Object.assign(this.$data, this.$options.data());\n      this.hideRule();\n    },\n    postRule: function postRule() {\n      //提交规则\n      var before = this.beforePostRule();\n      var obj = {\n        name: before.title,\n        data: Utils.encrypt(JSON.stringify(before.list))\n      };\n      this.edit ? obj.id = before.list.id : '';\n      this.parentName == 'Rule' ? this.ruleAction(obj) : this.demAction(obj);\n    }\n  })\n};",null]}