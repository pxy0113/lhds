{"remainingRequest":"F:\\work\\lhds\\node_modules\\thread-loader\\dist\\cjs.js!F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js!F:\\work\\lhds\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\work\\lhds\\src\\plugins\\cryAes.js","dependencies":[{"path":"F:\\work\\lhds\\src\\plugins\\cryAes.js","mtime":1571144344000},{"path":"F:\\work\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport CryptoJS from \"crypto-js\"; //秘钥\n\nvar CRYPTOJSKEY = \"6920D041374F2BC8\";\nexport default {\n  //加密\n\n  /*\n  * {param} plaintText 加密明文\n  * return  str 加密结果\n  */\n  encrypt: function encrypt(plaintText, cryptjskey) {\n    var plaintText = plaintText;\n    var options = {\n      mode: CryptoJS.mode.ECB,\n      padding: CryptoJS.pad.Pkcs7\n    };\n    var key = CryptoJS.enc.Utf8.parse(CRYPTOJSKEY);\n    var encryptedData = CryptoJS.AES.encrypt(plaintText, key, options);\n    var encryptedBase64Str = encryptedData.toString();\n    return encryptedBase64Str;\n  },\n  //解密\n\n  /*\n  * {param} plaintText 解密密文\n  \n  * return  str 解密结果\n  */\n  decrypt: function decrypt(encryptedBase64Str, cryptjskey) {\n    var encryptedBase64Str = encryptedBase64Str;\n    var options = {\n      mode: CryptoJS.mode.ECB,\n      padding: CryptoJS.pad.Pkcs7\n    };\n    var key = CryptoJS.enc.Utf8.parse(CRYPTOJSKEY); // 解密\n\n    var decryptedData = CryptoJS.AES.decrypt(encryptedBase64Str, key, options); // 解密后，需要按照Utf8的方式将明文转位字符串\n\n    var decryptedStr = decryptedData.toString(CryptoJS.enc.Utf8);\n    return decryptedStr;\n  }\n};",null]}