{"remainingRequest":"F:\\work\\lhds\\node_modules\\thread-loader\\dist\\cjs.js!F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js!F:\\work\\lhds\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\work\\lhds\\src\\mixins\\addRuleData.js","dependencies":[{"path":"F:\\work\\lhds\\src\\mixins\\addRuleData.js","mtime":1573440166527},{"path":"F:\\work\\lhds\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\work\\lhds\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\n// import {\n// \tmapActions\n// } from 'vuex';\n// import Utils from '@/plugins/cryAes.js'\nexport var addRuleData = {\n  data: function data() {\n    return {\n      ajaxObj: {},\n      //要提交的规则数据\n      rules: {\n        required: function required(v) {\n          return !!v || '必填';\n        },\n        length: function length(v) {\n          return v && v.length <= 68 || '超出长度';\n        },\n        isEmpty: function isEmpty(v) {\n          return /\\S/.test(v) || '不可为空';\n        },\n        size: function size(v) {\n          return v > 0 || '必须大于0';\n        },\n        percent: function percent(v) {\n          return v <= 100 || '不可超出100';\n        },\n        not: function not(v) {\n          return !/[\\u4E00-\\u9FA5]/g.test(v) || '不能是中文';\n        }\n      },\n      valid: true,\n      ruleName: '',\n      //规则名称\n      jData: {\n        //建仓\n        R1: 0,\n        //买入跌幅\n        R3: 1,\n        //单次买入金额\n        R2: 0,\n        //跌幅回调\n        R54: null,\n        //计价货币\n        R11: false,\n        //允许强制建仓\n        R12: 0,\n        //强制建仓\n        R13: false,\n        //允许\n        R14: 1,\n        //分钟内上涨\n        R15: 0,\n        //追涨建仓\n        R36: 1,\n        //防插针\n        R7: 0,\n        //单次补仓跌幅\n        R10: 0,\n        //补仓回调\n        R9: 0,\n        //单次补仓金额\n        R8: 0,\n        //补仓\n        R19: false,\n        //补仓单独卖出\n        R20: false,\n        //补单可进行补仓\n        R4: 0,\n        //卖出涨幅\n        R5: 0,\n        //涨幅回调\n        R6: 0,\n        //止损跌幅\n        R16: false,\n        //允许分钟内下跌\n        R17: 0,\n        //分钟内下跌\n        R18: 0,\n        //杀跌平仓\n        R26: false,\n        //允许补仓\n        R27: 0,\n        //分钟内下跌\n        R28: 0,\n        //时\n        R29: 0,\n        //补仓比例更改为\n        R30: 0,\n        //分钟后回复数值\n        R21: false,\n        //允许止损\n        R22: 0,\n        R23: 0,\n        R24: 0,\n        R25: 0,\n        R31: false,\n        //允许建仓\n        R32: 0,\n        R33: 0,\n        R34: 0,\n        R35: 0\n      },\n      activeRule: 0,\n      curcy: 1,\n      //当前的R54(货币)\n      currency: [{\n        id: 1,\n        value: 'USDT'\n      }, {\n        id: 2,\n        value: 'ETH'\n      }, {\n        id: 3,\n        value: 'BTC'\n      }],\n      child: ['建仓规则', '平仓规则', '补仓规则', '其他规则'],\n      type: 0\n    };\n  },\n  methods: {\n    listenState: function listenState(name) {\n      this.jData.R19 = name;\n      name == true ? '' : this.jData.R20 = false;\n    },\n    validateData: function validateData() {\n      //点击下一步的时候验证\n      if (this.$refs.form.validate()) {\n        this.activeRule++;\n        this.$refs.form.resetValidation();\n      } else {\n        this.changeSnack({\n          state: true,\n          errorText: {\n            type: 'info',\n            text: '表单填写错误'\n          }\n        });\n      }\n    },\n    transPropsData: function transPropsData() {\n      //编辑初始化对数据进行转换\n      if (this.edit) {\n        var item = JSON.parse(JSON.stringify(this.ruleObj));\n        this.curcy = Number(item.R54);\n        this.ruleName = item.R0 ? this.unescapeF(item.R0) : '';\n        item.R11 = item.R11 == 1 ? true : false;\n        item.R13 = item.R13 == 1 ? true : false;\n        item.R19 = item.R19 == 1 ? true : false;\n        item.R16 = item.R16 == 1 ? true : false;\n        item.R20 = item.R20 == 1 ? true : false;\n        item.R21 = item.R21 == 1 ? true : false;\n        item.R26 = item.R26 == 1 ? true : false;\n        item.R31 = item.R31 == 1 ? true : false;\n        this.jData = Object.assign({}, this.jData, item);\n      }\n    },\n    selectCurrency: function selectCurrency(e) {\n      //选择计价货币\n      this.jData.R54 = e;\n    },\n    // ...mapActions(['changeLay', 'changeSnack']),\n    hideRule: function hideRule() {\n      this.$emit('hideRule');\n    },\n    allowJc: function allowJc() {\n      //是否强制建仓\n      this.jData.R11 = !this.jData.R11;\n\n      if (!this.jData.R11) {\n        //没被选中\n        this.jData.R12 = 0;\n      }\n    },\n    allowSup: function allowSup() {\n      this.jData.R13 = !this.jData.R13;\n\n      if (!this.jData.R13) {\n        this.jData.R14 = 0;\n        this.jData.R15 = 0;\n        this.jData.R36 = 0;\n      }\n    },\n    allowPc: function allowPc() {\n      //允许-平仓\n      this.jData.R16 = !this.jData.R16;\n\n      if (!this.jData.R16) {\n        this.jData.R17 = 0;\n        this.jData.R18 = 0;\n      }\n    },\n    allowQtBc: function allowQtBc() {\n      //其他规则-启用补仓\n      this.jData.R26 = !this.jData.R26;\n\n      if (!this.jData.R26) {\n        this.jData.R27 = 0;\n        this.jData.R28 = 0;\n        this.jData.R29 = 0;\n        this.jData.R30 = 0;\n      }\n    },\n    allowQtZs: function allowQtZs() {\n      //其他规则-启用止损\n      this.jData.R21 = !this.jData.R21;\n\n      if (!this.jData.R21) {\n        this.jData.R22 = 0;\n        this.jData.R23 = 0;\n        this.jData.R24 = 0;\n        this.jData.R25 = 0;\n      }\n    },\n    allowQtJc: function allowQtJc() {\n      //其他规则-启用建仓\n      this.jData.R31 = !this.jData.R31;\n\n      if (!this.jData.R31) {\n        this.jData.R32 = 0;\n        this.jData.R33 = 0;\n        this.jData.R34 = 0;\n        this.jData.R35 = 0;\n      }\n    },\n    unescapeF: function unescapeF(str) {\n      //unicode=>文字\n      return unescape(str.replace(/\\\\/g, \"%\"));\n    },\n    charToUnicode: function charToUnicode(str) {\n      var res = [];\n\n      for (var i = 0; i < str.length; i++) {\n        res[i] = (\"00\" + str.charCodeAt(i).toString(16)).slice(-4);\n      }\n\n      return \"%u\" + res.join(\"%u\");\n    }\n  }\n};",null]}